{"version":3,"file":"index.mjs","sources":["../src/index.ts"],"sourcesContent":["\nimport type { ConnectionInfo } from '@ethersproject/web'\nimport type { Eip1193Bridge } from '@ethersproject/experimental'\nimport type { Actions } from '@disco3/types'\nimport { Connector } from '@disco3/types'\n\n\n\nexport enum SupportedChainId {\n  ETHEREUM = 1,\n}\n\nexport class Url extends Connector {\n  /** {@inheritdoc Connector.provider} */\n  declare public provider: Eip1193Bridge | undefined\n\n  private eagerConnection?: Promise<void>\n  private url: url\n\n  /**\n   * @param url - An RPC url.\n   * @param connectEagerly - A flag indicating whether connection should be initiated when the class is constructed.\n   */\n  constructor(actions: Actions, url: url, connectEagerly = false) {\n    super(actions)\n\n    if (connectEagerly && typeof window === 'undefined') {\n      throw new Error('connectEagerly = true is invalid for SSR, instead use the activate method in a useEffect')\n    }\n\n    this.url = url\n\n    if (connectEagerly) void this.activate()\n  }\n\n  private async isomorphicInitialize() {\n    if (this.eagerConnection) return this.eagerConnection\n\n    await (this.eagerConnection = Promise.all([\n      import('@ethersproject/providers').then(({ JsonRpcProvider }) => JsonRpcProvider),\n      import('@ethersproject/experimental').then(({ Eip1193Bridge }) => Eip1193Bridge),\n    ]).then(([JsonRpcProvider, Eip1193Bridge]) => {\n      const provider = new JsonRpcProvider(this.url)\n      this.provider = new Eip1193Bridge(provider.getSigner(), provider)\n    }))\n  }\n\n  /** {@inheritdoc Connector.activate} */\n  public async activate(): Promise<void> {\n    if (!this.provider) this.actions.startActivation()\n\n    await this.isomorphicInitialize()\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.provider!.request({ method: 'eth_chainId' })\n      .then((chainId: string) => {\n        this.actions.update({ chainId: parseChainId(chainId), accounts: [] })\n      })\n      .catch((error: Error) => {\n        this.actions.reportError(error)\n      })\n  }\n}\n\ntype url = string | ConnectionInfo\n\nfunction parseChainId(chainId: string) {\n  return Number.parseInt(chainId, 16)\n}\n\n  export const SUSHIGUARD_RELAY: { [chainId in SupportedChainId]?: string } = {\n    [SupportedChainId.ETHEREUM]: 'https://api.sushirelay.com/v1',\n  }\n  "],"names":[],"mappings":";;AACU,IAAC,iBAAiB;AAC5B,CAAC,SAAS,iBAAiB,EAAE;AAC7B,EAAE,iBAAiB,CAAC,iBAAiB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC;AACpE,CAAC,EAAE,gBAAgB,KAAK,gBAAgB,GAAG,EAAE,CAAC,CAAC,CAAC;AACzC,MAAM,GAAG,SAAS,SAAS,CAAC;AACnC,EAAE,WAAW,CAAC,OAAO,EAAE,GAAG,EAAE,cAAc,GAAG,KAAK,EAAE;AACpD,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;AACnB,IAAI,IAAI,cAAc,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;AACzD,MAAM,MAAM,IAAI,KAAK,CAAC,0FAA0F,CAAC,CAAC;AAClH,KAAK;AACL,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACnB,IAAI,IAAI,cAAc;AACtB,MAAM,KAAK,IAAI,CAAC,QAAQ,EAAE,CAAC;AAC3B,GAAG;AACH,EAAE,MAAM,oBAAoB,GAAG;AAC/B,IAAI,IAAI,IAAI,CAAC,eAAe;AAC5B,MAAM,OAAO,IAAI,CAAC,eAAe,CAAC;AAClC,IAAI,OAAO,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,GAAG,CAAC;AAC9C,MAAM,OAAO,0BAA0B,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,eAAe,EAAE,KAAK,eAAe,CAAC;AACvF,MAAM,OAAO,6BAA6B,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,aAAa,EAAE,KAAK,aAAa,CAAC;AACtF,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,eAAe,EAAE,aAAa,CAAC,KAAK;AAClD,MAAM,MAAM,QAAQ,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACrD,MAAM,IAAI,CAAC,QAAQ,GAAG,IAAI,aAAa,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,QAAQ,CAAC,CAAC;AACxE,KAAK,CAAC,CAAC,CAAC;AACR,GAAG;AACH,EAAE,MAAM,QAAQ,GAAG;AACnB,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ;AACtB,MAAM,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;AACrC,IAAI,MAAM,IAAI,CAAC,oBAAoB,EAAE,CAAC;AACtC,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,aAAa,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,KAAK;AAC9E,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,YAAY,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;AAC5E,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,KAAK;AACxB,MAAM,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AACtC,KAAK,CAAC,CAAC;AACP,GAAG;AACH,CAAC;AACD,SAAS,YAAY,CAAC,OAAO,EAAE;AAC/B,EAAE,OAAO,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;AACtC,CAAC;AACW,MAAC,gBAAgB,GAAG;AAChC,EAAE,CAAC,CAAC,GAAG,+BAA+B;AACtC;;;;"}